name: CI

on: [push, pull_request]

env:
  FORCE_COLOR: 1

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # https://docs.djangoproject.com/en/stable/faq/install/#what-python-version-can-i-use-with-django
        versions:
          # Linting
          - tox: flake8
            python: 3.6
          - tox: readme
            python: 3.6

          # Django 1.11
          - tox: py27-dj111
            python: 2.7
          - tox: py35-dj111
            python: 3.5
          - tox: py36-dj111
            python: 3.6

          # Django 2.0
          - tox: py35-dj20
            python: 3.5
          - tox: py36-dj20
            python: 3.6
          - tox: py37-dj20
            python: 3.7

          # Django 2.1
          - tox: py35-dj21
            python: 3.5
          - tox: py36-dj21
            python: 3.6
          - tox: py37-dj21
            python: 3.7

        # TODO: test on mac OS & windows?
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.versions.python }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.os }}-${{ matrix.versions.python }}-v1-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.versions.python }}-v1-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U tox

      - name: Tox tests
        shell: bash
        run: tox -e ${{ matrix.versions.tox }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - tests

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: python -m pip install -U pip wheel

      - name: Build packages
        run: python setup.py sdist bdist_wheel

      - name: Publish packages
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
