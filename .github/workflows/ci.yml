name: CI

on:
  push:
#    branches:
#      - master
  pull_request:

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # https://docs.djangoproject.com/en/stable/faq/install/#what-python-version-can-i-use-with-django
        versions:
          # Django 1.11
          - django: 1.11
            python: 2.7
          - django: 1.11
            python: 3.5
          - django: 1.11
            python: 3.6

          # Django 2.0
          - django: 2.0
            python: 3.5
          - django: 2.0
            python: 3.6
          - django: 2.0
            python: 3.7

          # Django 2.1
          - django: 2.1
            python: 3.5
          - django: 2.1
            python: 3.6
          - django: 2.1
            python: 3.7

        # TODO: test on mac OS & windows?
        os:
          - ubuntu-latest



    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.versions.python }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.os }}-${{ matrix.versions.python }}-v1-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.versions.python }}-v1-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U tox

      - name: Tox tests
        shell: bash
        run: tox -e py${{ matrix.versions.python }}-dj${{ matrix.versions.django }}

  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        linter:
          - flake8
          - readme

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U tox

      - run: tox -e ${{ matrix.linter }}
