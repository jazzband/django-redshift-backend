name: Test examples/proj1

on: [push, pull_request]

jobs:
  build:
    name: build (Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        python-version: ['3.10']
        django-version: ['4.2', '5.0', '5.1']
        include:
          - django-version: 'main'
            python-version: '3.10'

    services:
      postgres:
        image: postgres:9.6-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: examples/proj1
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv pip install --system -r requirements.txt
        uv pip install --system psycopg2-binary

    - name: tests
      working-directory: examples/proj1
      env:
        ENV_FILE: .env.psql
      run: |
        python manage.py makemigrations testapp
        python manage.py sqlmigrate testapp 0001
